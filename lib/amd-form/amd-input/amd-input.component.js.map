{"version":3,"sources":["amd-form/amd-input/amd-input.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAKO,eAAe,CAAC,CAAA;AAEvB,IAAI,yBAAyB,GAAW,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAa9E;IAeC;QACC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACxB,CAAC;IAEM,oCAAQ,GAAf;IAEA,CAAC;IAEM,mCAAO,GAAd;QACC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACvB,CAAC;IAEM,kCAAM,GAAb;QACC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACxB,CAAC;IAEM,oCAAQ,GAAf,UAAgB,KAAY;IAE5B,CAAC;IAED,sBAAW,uCAAQ;aAAnB;YACC,MAAM,CAAC,IAAI,CAAC,KAAK;gBAChB,IAAI,CAAC,KAAK,KAAK,SAAS;gBACxB,IAAI,CAAC,KAAK,KAAK,EAAE;gBACjB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACxB,CAAC;;;OAAA;IAtCD;QAAC,YAAK,CAAC,OAAO,CAAC;;oDAAA;IACf;QAAC,YAAK,CAAC,MAAM,CAAC;;mDAAA;IACd;QAAC,YAAK,CAAC,MAAM,CAAC;;mDAAA;IACd;QAAC,YAAK,CAAC,WAAW,CAAC;;wDAAA;IACnB;QAAC,YAAK,CAAC,UAAU,CAAC;;uDAAA;IAClB;QAAC,YAAK,CAAC,WAAW,CAAC;;wDAAA;IACnB;QAAC,YAAK,CAAC,WAAW,CAAC;;wDAAA;IACnB;QAAC,YAAK,CAAC,UAAU,CAAC;;uDAAA;IAClB;QAAC,YAAK,CAAC,UAAU,CAAC;;uDAAA;IAClB;QAAC,YAAK,CAAC,UAAU,CAAC;;uDAAA;IAjBnB;QAAC,gBAAS,CAAC;YACV,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,yBAAyB;YACnC,MAAM,EAAE,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;YAC/C,aAAa,EAAE,wBAAiB,CAAC,MAAM;SACvC,CAAC;;yBAAA;IA0CF,wBAAC;AAAD,CAzCA,AAyCC,IAAA;AAzCY,yBAAiB,oBAyC7B,CAAA","file":"amd-input.component.js","sourcesContent":["import {\r\n\tComponent,\r\n\tOnInit,\r\n\tInput,\r\n\tViewEncapsulation\r\n} from '@angular/core';\r\n\r\nlet AmdInputComponentTemplate: string = require('./amd-input.component.html');\r\n\r\nexport interface IErrorMessage {\r\n\tkey: string;\r\n\tvalue: string;\r\n}\r\n\r\n@Component({\r\n\tselector: 'amd-input',\r\n\ttemplate: AmdInputComponentTemplate,\r\n\tstyles: [require('./amd-input.component.scss')],\r\n\tencapsulation: ViewEncapsulation.Native\r\n})\r\nexport class AmdInputComponent implements OnInit {\r\n\r\n\t@Input('value') public value: any;\r\n\t@Input('type') public type: string;\r\n\t@Input('name') public name: string;\r\n\t@Input('autofocus') public autofocus: string;\r\n\t@Input('disabled') public disabled: string;\r\n\t@Input('maxlength') public maxlength: string;\r\n\t@Input('minlength') public minlength: string;\r\n\t@Input('readonly') public readonly: string;\r\n\t@Input('required') public required: string;\r\n\t@Input('messages') public messages: Array<IErrorMessage>;\r\n\r\n\tpublic isFocused: boolean;\r\n\r\n\tconstructor() {\r\n\t\tthis.isFocused = false;\r\n\t}\r\n\r\n\tpublic ngOnInit(): void {\r\n\t\t// todo: init\r\n\t}\r\n\r\n\tpublic onFocus(): void {\r\n\t\tthis.isFocused = true;\r\n\t}\r\n\r\n\tpublic onBlur(): void {\r\n\t\tthis.isFocused = false;\r\n\t}\r\n\r\n\tpublic onChange(event: Event): void {\r\n\t\t// todo: handle change event\r\n\t}\r\n\r\n\tpublic get hasValue(): boolean {\r\n\t\treturn this.value &&\r\n\t\t\tthis.value !== undefined &&\r\n\t\t\tthis.value !== '' &&\r\n\t\t\tthis.value.length > 0;\r\n\t}\r\n}\r\n"]}